/*
 * File: app/view/PartMaster.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ItemMaster.view.PartMaster', {
	extend: 'Ext.panel.Panel',
	alias: 'widget.partmaster',

	mixins: [
		'DocForm'
	],
	requires: [
		'ItemMaster.view.PartMasterViewModel',
		'ItemMaster.view.Part',
		'ItemMaster.view.PartBom',
		'ItemMaster.view.PartRouting',
		'Ext.toolbar.Toolbar',
		'Ext.form.field.Text',
		'Ext.tab.Panel',
		'Ext.tab.Tab'
	],

	viewModel: {
		type: 'partmaster'
	},
	frame: true,
	minHeight: 500,
	minWidth: 500,
	title: 'Item Master',
	defaultListenerScope: true,

	layout: {
		type: 'vbox',
		align: 'stretch'
	},
	dockedItems: [
		{
			xtype: 'toolbar',
			flex: 1,
			dock: 'top',
			itemId: 'partToolbar',
			defaultButtonUI: 'default',
			items: [
				{
					xtype: 'button',
					margin: '0 0 0 10',
					icon: '/inc/img/silk_icons/arrow_right.png',
					text: 'View Create Guide',
					listeners: {
						click: 'onButtonClick'
					}
				}
			]
		}
	],
	items: [
		{
			xtype: 'container',
			margin: '10 0 0 10',
			items: [
				{
					xtype: 'textfield',
					itemId: 'partName',
					fieldLabel: 'Part Name'
				}
			]
		},
		{
			xtype: 'tabpanel',
			flex: 1,
			margin: '10 0 0 0 ',
			bodyStyle: 'background:none',
			activeTab: 0,
			deferredRender: false,
			items: [
				{
					xtype: 'part'
				},
				{
					xtype: 'partbom',
					itemId: 'partBom'
				},
				{
					xtype: 'partrouting',
					itemId: 'partRoutings'
				}
			]
		}
	],
	listeners: {
		afterrender: 'onPanelAfterRender'
	},

	onButtonClick: function(button, e, eOpts) {
		window.open("/ItemMaster/createManufacturingLayout?partId=" + this.partId);
	},

	onPanelAfterRender: function(component, eOpts) {
		this.docFormInit({
			toolbarId: 'partToolbar',
			searchFn: 'searchParts',
			addFn: 'createPart',
			saveFn: 'updatePart',
			deleteFn: 'deletePart',
			searchableFields:['partName']
		});
	},

	searchParts: function() {
		if(!this.partSearchWindow) {
			this.partSearchWindow = Ext.create("ItemMaster.view.PartSearchWindow", {
				listeners: {
					partselected:function(partId) {
						this.readPart(partId);
					},
					scope:this
				}
			});
		}

		this.partSearchWindow.show(null, function() {
				this.partSearchWindow.searchParts(this.queryById('partName').getValue());
		}, this);
	},

	readPart: function(partId) {
		AERP.Ajax.request({
			url:'/ItemMaster/readPart',
			jsonData:{partId: partId},
			success:function(reply) {
				this.docFormLoadFormData(reply);
				this.queryById('partBom').readPartBom(partId);
				this.queryById('partRoutings').readRoutings(partId);

				this.partId = partId;
			},
			scope:this,
			mask:this
		});
	},

	createPart: function() {
		let jsonData = this.docFormGetAllFieldValues();

		AERP.Ajax.request({
			url:'/ItemMaster/createPart',
			jsonData:jsonData,
			success:function(reply) {
				this.readPart(reply.data);
			},
			scope:this,
			mask:this
		});
	},

	updatePart: function() {
		let jsonData = this.docFormGetAllFieldValues();
		jsonData.partId = this.partId;

		AERP.Ajax.request({
			url:'/ItemMaster/updatePart',
			jsonData:jsonData,
			success:function(reply) {
				this.readPart(this.partId);
			},
			scope:this,
			mask:this
		});
	},

	deletePart: function() {
		AERP.Ajax.request({
			url:'/ItemMaster/deletePart',
			jsonData:{partId: this.partId},
			success:function(reply) {
				this.docFormReset();
			},
			scope:this,
			mask:this
		});
	}

});