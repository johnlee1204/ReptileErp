/*
 * File: app/view/LoginForm.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Login.view.LoginForm', {
	extend: 'Ext.form.Panel',
	alias: 'widget.loginform',

	requires: [
		'Login.view.LoginFormViewModel',
		'Ext.container.Container',
		'Ext.form.field.Text',
		'Ext.button.Button'
	],

	viewModel: {
		type: 'loginform'
	},
	border: false,
	margin: 5,
	width: 250,
	bodyStyle: {
		background: 'none'
	},
	title: '',
	defaultListenerScope: true,

	items: [
		{
			xtype: 'container',
			cls: 'logo',
			height: 75,
			itemId: 'logo'
		},
		{
			xtype: 'container',
			html: 'Please Login',
			itemId: 'pleaseLogin',
			style: {
				'font-family': 'Arial',
				'font-size': '20px',
				'text-decoration': 'italic',
				'font-weight': 'bolder',
				'margin-bottom': '10px',
				'text-align': 'center'
			}
		},
		{
			xtype: 'textfield',
			anchor: '100%',
			itemId: 'user',
			margin: '5 0 5 0',
			fieldLabel: '',
			labelAlign: 'right',
			name: 'user',
			emptyText: 'Username'
		},
		{
			xtype: 'textfield',
			anchor: '100%',
			itemId: 'pass',
			margin: '5 0 5 0',
			fieldLabel: '',
			labelAlign: 'right',
			name: 'pass',
			inputType: 'password',
			emptyText: 'Password',
			enableKeyEvents: true,
			listeners: {
				keypress: 'onTextfieldKeypress'
			}
		},
		{
			xtype: 'container',
			layout: {
				type: 'hbox',
				align: 'stretch'
			},
			items: [
				{
					xtype: 'container',
					flex: 1
				},
				{
					xtype: 'button',
					padding: '10 30 10 30',
					icon: '/inc/img/silk_icons/key.png',
					text: 'Login',
					listeners: {
						click: 'onButtonClick'
					}
				},
				{
					xtype: 'container',
					flex: 1
				}
			]
		}
	],
	listeners: {
		afterrender: 'onFormAfterRender'
	},

	onTextfieldKeypress: function(textfield, e, eOpts) {
		if(e.keyCode == Ext.event.Event.ENTER){
		    this.login();
		}
	},

	onButtonClick: function(button, e, eOpts) {
		this.login();
	},

	onFormAfterRender: function(component, eOpts) {
		var searchQuery = Ext.Object.fromQueryString(window.location.search);
		if(searchQuery.hasOwnProperty('loggedOut')){
			this.queryById('pleaseLogin').setHtml('<span style="color:#F44336;">You have been logged out</span>');
		}
		this.queryById('user').focus();
	},

	login: function() {
		var values = this.getValues();
		if(values.user === '' || values.pass === ''){
			return;
		}

		this.mask('Logging In...');
		AERP.Ajax.request({
			url:'/Login/authenticate',
			params:values,
			success:function(reply){
				this.unmask();
				if(!reply.login){
					Ext.Msg.alert('Error', 'Login Failed');
					var pass = this.queryById('pass');
					pass.reset();
					Ext.Msg.alert('Login Failed','Incorrect User or Password!<BR><BR>Please try again.', function(){
						pass.focus();
					});
					return;
				}
				if(this.eventMode){
					this.fireEvent('loginSuccess',values.user);
				}else{
					var redirectUrl = this.getGetVar('redirect');
					if(redirectUrl){
						location.href = reply.rootUrl+redirectUrl;
					}else{
						location.href = reply.rootUrl;
					}
				}
			},
			failure:function(){
				this.unmask();
			},
			scope:this
		});

	},

	getGetVar: function(key) {
		var searchQuery = Ext.Object.fromQueryString(window.location.search);
		if(searchQuery.hasOwnProperty(key)){
			return searchQuery[key];
		}else{
			return false;
		}

	}

});