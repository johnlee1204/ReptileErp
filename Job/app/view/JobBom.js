/*
 * File: app/view/JobBom.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Job.view.JobBom', {
	extend: 'Ext.panel.Panel',
	alias: 'widget.jobbom',

	requires: [
		'Job.view.JobBomViewModel',
		'Ext.tree.Panel',
		'Ext.toolbar.Toolbar',
		'Ext.tree.View',
		'Ext.tree.Column'
	],

	viewModel: {
		type: 'jobbom'
	},
	title: 'Job BOM',
	defaultListenerScope: true,

	layout: {
		type: 'vbox',
		align: 'stretch'
	},
	items: [
		{
			xtype: 'treepanel',
			flex: 1,
			itemId: 'jobBomGrid',
			rowLines: true,
			folderSort: true,
			useArrows: true,
			dockedItems: [
				{
					xtype: 'toolbar',
					dock: 'top',
					itemId: 'jobBomToolbar'
				}
			],
			viewConfig: {
				enableTextSelection: true
			},
			columns: [
				{
					xtype: 'treecolumn',
					width: 249,
					dataIndex: 'partName',
					text: 'Part'
				},
				{
					xtype: 'gridcolumn',
					dataIndex: 'jobNumber',
					text: 'For Job'
				},
				{
					xtype: 'gridcolumn',
					hidden: true,
					dataIndex: 'jobId',
					text: 'For Job Id'
				},
				{
					xtype: 'gridcolumn',
					hidden: true,
					width: 112,
					dataIndex: 'jobBillOfMaterialId',
					text: 'Job Bom Record Id'
				},
				{
					xtype: 'gridcolumn',
					dataIndex: 'quantity',
					text: 'Quantity'
				},
				{
					xtype: 'gridcolumn',
					width: 92,
					dataIndex: 'totalQuantity',
					text: 'Total Quantity'
				},
				{
					xtype: 'gridcolumn',
					hidden: true,
					width: 81,
					dataIndex: 'subJobId',
					text: 'Sub Job Id'
				},
				{
					xtype: 'gridcolumn',
					width: 81,
					dataIndex: 'subJob',
					text: 'Source Job'
				},
				{
					xtype: 'gridcolumn',
					width: 81,
					dataIndex: 'source',
					text: 'Source'
				}
			],
			listeners: {
				selectionchange: 'onTreepanelSelectionChange'
			}
		}
	],
	listeners: {
		afterrender: 'onPanelAfterRender'
	},

	onTreepanelSelectionChange: function(model, selected, eOpts) {

	},

	onPanelAfterRender: function(component, eOpts) {
		Ext.create("NiceGridMenu", {
			menuItems:[
				{text:'Load For Job', appLink:'job', appLinkField:'jobId'},
				{text:'Load Source Job', appLink:'job', appLinkField:'subJobId'},
			],
			callbackHandler:function(action, data) {},
			grid:this.queryById('jobBomGrid'),
			toolbar:this.queryById('jobBomToolbar'),
			scope:this
		});
	},

	readJobBom: function(jobId) {
		AERP.Ajax.request({
			url:'/Job/readJobBom',
			jsonData:{jobId:jobId},
			success:function(reply) {
				this.jobId = jobId;
				let jobBomGrid = this.queryById('jobBomGrid');
				jobBomGrid.setRootNode(reply.data);
				jobBomGrid.expandAll();
			},
			scope:this,
			mask:this
		});
	}

});