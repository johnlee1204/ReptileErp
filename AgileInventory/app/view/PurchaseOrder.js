/*
 * File: app/view/PurchaseOrder.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.3.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.3.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AgileInventory.view.PurchaseOrder', {
	extend: 'Ext.panel.Panel',
	alias: 'widget.purchaseorder',

	mixins: [
		'DocForm'
	],
	requires: [
		'AgileInventory.view.PurchaseOrderViewModel',
		'Ext.toolbar.Toolbar'
	],

	viewModel: {
		type: 'purchaseorder'
	},
	bodyStyle: 'background:none',
	defaultListenerScope: true,

	dockedItems: [
		{
			xtype: 'toolbar',
			dock: 'top',
			itemId: 'purchaseOrderFormToolbar'
		}
	],
	listeners: {
		afterrender: 'onPanelAfterRender'
	},

	onPanelAfterRender: function(component, eOpts) {
		this.docFormInit({
			toolbarId:"purchaseOrderFormToobar",
			addFn:"createPurchaseOrder",
			saveFn:"updatePurchaseOrder",
			deleteFn:"deletePurchaseOrder"
		});
	},

	readPurchaseOrder: function(purchaseOrderId) {
		AERP.Ajax.request({
			url:"/AgileInventory/readPurchaseOrder",
			jsonData:{purchaseOrderId:purchaseOrderId},
			success:function(reply) {
				this.purchaseOrderId = purchaseOrderId;
				this.docFormLoadFormData(reply);
			},
			scope:this,
			mask:this
		});
	},

	createPurchaseOrder: function() {
		AERP.Ajax.request({
			url:"/AgileInventory/createPurchaseOrder",
			jsonData:this.docFormGetAllFieldValues(),
			success:function(reply) {
				this.readPurchaseOrder(reply.data);
				this.fireEvent('purchaseorderchanged');
			},
			scope:this,
			mask:this
		});
	},

	updatePurchaseOrder: function() {
		let jsonData = this.docFormGetAllFieldValues();
		jsonData.purchaseOrderId = this.purchaseOrderId;

		AERP.Ajax.request({
			url:"/AgileInventory/updatePurchaseOrder",
			jsonData:jsonData,
			success:function(reply) {
				this.readPurchaseOrder(this.purchaseOrderId);
				this.fireEvent('purchaseorderchanged');
			},
			scope:this,
			mask:this
		});
	},

	deletePurchaseOrder: function() {
		AERP.Ajax.request({
			url:"/AgileInventory/updatePurchaseOrder",
			jsonData:{purchaseOrderId:this.purchaseOrderId},
			success:function(reply) {
				this.purchaseOrderId = null;
				this.docFormReset();
				this.fireEvent('purchaseorderchanged');
			},
			scope:this,
			mask:this
		});
	}

});