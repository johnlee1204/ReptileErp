/*
 * File: app/view/ProductFormViewModel.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.3.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.3.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AgileInventory.view.ProductFormViewModel', {
	extend: 'Ext.app.ViewModel',
	alias: 'viewmodel.productform',

	requires: [
		'Ext.data.Store',
		'Ext.data.field.Date'
	],

	stores: {
		PrimaryLocationStore: {
			fields: [
				{
					name: 'locationId'
				},
				{
					name: 'locationName'
				},
				{
					name: 'locationDescription'
				}
			]
		},
		SecondaryLocationStore: {
			fields: [
				{
					name: 'locationId'
				},
				{
					name: 'locationName'
				},
				{
					name: 'locationDescription'
				}
			]
		},
		PrimaryBinStore: {
			fields: [
				{
					name: 'binId'
				},
				{
					name: 'binName'
				},
				{
					name: 'binDescription'
				}
			]
		},
		SecondaryBinStore: {
			fields: [
				{
					name: 'binId'
				},
				{
					name: 'binName'
				},
				{
					name: 'binDescription'
				}
			]
		},
		AdjustmentTypeStore: {
			data: [
				{
					type: 'In'
				},
				{
					type: 'Out'
				}
			],
			fields: [
				{
					name: 'type'
				}
			]
		},
		AdjustmentLocationStore: {
			fields: [
				{
					name: 'locationId'
				},
				{
					name: 'locationName'
				},
				{
					name: 'locationDescription'
				}
			]
		},
		AdjustmentBinStore: {
			fields: [
				{
					name: 'binId'
				},
				{
					name: 'binName'
				},
				{
					name: 'binDescription'
				}
			]
		},
		TransferFromLocationStore: {
			fields: [
				{
					name: 'locationId'
				},
				{
					name: 'locationName'
				},
				{
					name: 'locationDescription'
				}
			]
		},
		TransferToLocationStore: {
			fields: [
				{
					name: 'locationId'
				},
				{
					name: 'locationName'
				},
				{
					name: 'locationDescription'
				}
			]
		},
		TransferFromBinStore: {
			fields: [
				{
					name: 'binId'
				},
				{
					name: 'binName'
				},
				{
					name: 'binDescription'
				}
			]
		},
		TransferToBinStore: {
			fields: [
				{
					name: 'binId'
				},
				{
					name: 'binName'
				},
				{
					name: 'binDescription'
				}
			]
		},
		OnHandStore: {
			fields: [
				{
					name: 'onHandId'
				},
				{
					name: 'locationId'
				},
				{
					name: 'location'
				},
				{
					name: 'binId'
				},
				{
					name: 'bin'
				},
				{
					name: 'quantity'
				},
				{
					name: 'designation'
				}
			]
		},
		AdjustmentOnHandStore: {
			fields: [
				{
					name: 'onHandId'
				},
				{
					name: 'locationId'
				},
				{
					name: 'location'
				},
				{
					name: 'binId'
				},
				{
					name: 'bin'
				},
				{
					name: 'quantity'
				},
				{
					name: 'designation'
				}
			]
		},
		TransferFromOnHandStore: {
			fields: [
				{
					name: 'onHandId'
				},
				{
					name: 'locationId'
				},
				{
					name: 'location'
				},
				{
					name: 'binId'
				},
				{
					name: 'bin'
				},
				{
					name: 'quantity'
				},
				{
					name: 'designation'
				}
			]
		},
		TransferToOnHandStore: {
			fields: [
				{
					name: 'onHandId'
				},
				{
					name: 'locationId'
				},
				{
					name: 'location'
				},
				{
					name: 'binId'
				},
				{
					name: 'bin'
				},
				{
					name: 'quantity'
				},
				{
					name: 'designation'
				}
			]
		},
		TransactionHistoryStore: {
			fields: [
				{
					name: 'transactionId'
				},
				{
					type: 'date',
					name: 'transactionDate',
					dateReadFormat: 'Y-m-d H:i:s'
				},
				{
					name: 'quantity'
				},
				{
					name: 'fromLocation'
				},
				{
					name: 'fromBin'
				},
				{
					name: 'toLocation'
				},
				{
					name: 'toBin'
				},
				{
					name: 'transferedBy'
				},
				{
					name: 'comment'
				},
				{
					name: 'type'
				}
			]
		}
	}

});