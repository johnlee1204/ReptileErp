/*
 * File: app/view/PartSearchWindow.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Satisfactory.view.PartSearchWindow', {
	extend: 'Ext.window.Window',
	alias: 'widget.partsearchwindow',

	requires: [
		'Satisfactory.view.PartSearchWindowViewModel',
		'Ext.grid.Panel',
		'Ext.toolbar.Toolbar',
		'Ext.grid.column.Column',
		'Ext.view.Table'
	],

	viewModel: {
		type: 'partsearchwindow'
	},
	height: 500,
	width: 600,
	closeAction: 'hide',
	title: 'Part Search',
	defaultListenerScope: true,

	layout: {
		type: 'vbox',
		align: 'stretch'
	},
	items: [
		{
			xtype: 'gridpanel',
			flex: 1,
			itemId: 'partSearchGrid',
			bind: {
				store: '{PartStore}'
			},
			dockedItems: [
				{
					xtype: 'toolbar',
					dock: 'top',
					itemId: 'partSearchToolbar'
				}
			],
			columns: [
				{
					xtype: 'gridcolumn',
					width: 202,
					dataIndex: 'partName',
					text: 'Part'
				},
				{
					xtype: 'gridcolumn',
					width: 351,
					dataIndex: 'partDescription',
					text: 'Description'
				}
			],
			viewConfig: {
				enableTextSelection: true
			}
		}
	],
	listeners: {
		afterrender: 'onGridpanelAfterRender'
	},

	onGridpanelAfterRender: function(component, eOpts) {
		Ext.create("NiceGridMenu", {
			menuItems:[{text: "Select Part", action: 'selectPart', icon:'/inc/img/silk_icons/accept.png', disabled:true}],
			callbackHandler:function(action, data) {
				switch(action) {
					case 'selectPart':
						this.close();
						this.fireEvent('partselected', data.partId);
						break;
				}
			},
			grid:this.queryById('partSearchGrid'),
			toolbar:this.queryById('partSearchToolbar'),
			doubleClick:'selectPart',
			scope:this
		});
	},

	searchParts: function(partName) {
		AERP.Ajax.request({
			url:'/Satisfactory/searchParts',
			jsonData:{partName: partName},
			success:function(reply) {
				if(reply.data.length === 0) {
					this.close();
					Ext.Msg.alert("", "No Results!");
				}

				if(reply.data.length === 1) {
					this.close();
					this.fireEvent('partselected', reply.data[0][0]);
				}

				this.getViewModel().getStore('PartStore').loadData(reply.data);
			},
			scope:this,
			mask:this
		});
	}

});