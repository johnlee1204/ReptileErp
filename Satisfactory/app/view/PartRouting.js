/*
 * File: app/view/PartRouting.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Satisfactory.view.PartRouting', {
	extend: 'Ext.panel.Panel',
	alias: 'widget.partrouting',

	requires: [
		'Satisfactory.view.PartRoutingViewModel',
		'Satisfactory.view.PartRoutingForm',
		'Ext.grid.Panel',
		'Ext.grid.column.Column',
		'Ext.view.Table'
	],

	viewModel: {
		type: 'partrouting'
	},
	flex: 1,
	bodyStyle: 'background:none',
	title: 'Part Routing',
	defaultListenerScope: true,

	layout: {
		type: 'vbox',
		align: 'stretch'
	},
	items: [
		{
			xtype: 'gridpanel',
			flex: 1,
			bind: {
				store: '{PartRoutingStore}'
			},
			columns: [
				{
					xtype: 'gridcolumn',
					width: 146,
					dataIndex: 'partRoutingWorkcenter',
					text: 'Work Center'
				},
				{
					xtype: 'gridcolumn',
					dataIndex: 'partsPerMinute',
					text: 'Parts Per Minute'
				},
				{
					xtype: 'gridcolumn',
					dataIndex: 'energy',
					text: 'Energy'
				}
			],
			viewConfig: {
				enableTextSelection: true
			},
			listeners: {
				selectionchange: 'onGridpanelSelectionChange'
			}
		},
		{
			xtype: 'partroutingform',
			itemId: 'partRoutingForm',
			listeners: {
				routingchanged: 'onPanelRoutingChangeD'
			}
		}
	],

	onGridpanelSelectionChange: function(model, selected, eOpts) {
		if(!selected || selected.length !== 1) {
			return;
		}

		selected = selected[0];

		this.queryById('partRoutingForm').readRouting(selected.data.partRoutingId);
	},

	onPanelRoutingChangeD: function(panel) {
		this.readRoutings(this.partId);
	},

	readRoutings: function(partId) {
		AERP.Ajax.request({
			url:'/Satisfactory/readRoutings',
			jsonData:{partId:partId},
			success:function(reply) {
				this.partId = partId;
				this.queryById('partRoutingForm').partId = partId;
				this.getViewModel().getStore('PartRoutingStore').loadData(reply.data);
			},
			scope:this,
			mask:this
		});
	}

});