/*
 * File: app/view/WorkcenterForm.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Workcenter.view.WorkcenterForm', {
	extend: 'Ext.panel.Panel',
	alias: 'widget.workcenterform',

	mixins: [
		'DocForm'
	],
	requires: [
		'Workcenter.view.WorkcenterFormViewModel',
		'Ext.toolbar.Toolbar',
		'Ext.form.field.Text'
	],

	viewModel: {
		type: 'workcenterform'
	},
	bodyPadding: 10,
	bodyStyle: 'background:none',
	defaultListenerScope: true,

	dockedItems: [
		{
			xtype: 'toolbar',
			dock: 'top',
			itemId: 'workcenterToolbar'
		}
	],
	items: [
		{
			xtype: 'textfield',
			itemId: 'workcenterName',
			fieldLabel: 'Work Center Name',
			labelWidth: 120
		},
		{
			xtype: 'textfield',
			itemId: 'workcenterDescription',
			fieldLabel: 'Work Center Desc',
			labelWidth: 120
		},
		{
			xtype: 'textfield',
			itemId: 'energy',
			fieldLabel: 'Energy',
			labelWidth: 120
		}
	],
	listeners: {
		afterrender: 'onPanelAfterRender'
	},

	onPanelAfterRender: function(component, eOpts) {
		this.docFormInit({
			toolbarId:'workcenterToolbar',
			addFn: 'createWorkcenter',
			saveFn: 'updateWorkcenter',
			deleteFn: 'deleteWorkcenter'
		});
	},

	readWorkcenter: function(workcenterId) {
		AERP.Ajax.request({
			url:'/Workcenter/readWorkcenter',
			jsonData:{workcenterId:workcenterId},
			success:function(reply) {
				this.workcenterId = workcenterId;
				this.docFormLoadFormData(reply);
			},
			scope:this,
			mask:this
		});
	},

	createWorkcenter: function() {
		AERP.Ajax.request({
			url:'/Workcenter/createWorkcenter',
			jsonData:this.docFormGetAllFieldValues(),
			success:function(reply) {
				this.readWorkcenter(reply.data);
				this.fireEvent('workcenterchanged');
			},
			scope:this,
			mask:this
		});
	},

	updateWorkcenter: function() {
		let jsonData = this.docFormGetAllFieldValues();
		jsonData.workcenterId = this.workcenterId;

		AERP.Ajax.request({
			url:'/Workcenter/updateWorkcenter',
			jsonData:jsonData,
			success:function(reply) {
				this.readWorkcenter(this.workcenterId);
				this.fireEvent('workcenterchanged');
			},
			scope:this,
			mask:this
		});
	},

	deleteWorkcenter: function() {
		AERP.Ajax.request({
			url:'/Workcenter/deleteWorkcenter',
			jsonData:{workcenterId:this.workcenterId},
			success:function(reply) {
				this.docFormReset();
				this.fireEvent('workcenterchanged');
			},
			scope:this,
			mask:this
		});
	}

});