/*
 * File: app/view/HabitatData.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('PetMaster.view.HabitatData', {
	extend: 'Ext.panel.Panel',
	alias: 'widget.habitatdata',

	requires: [
		'PetMaster.view.HabitatDataViewModel',
		'Ext.toolbar.Toolbar',
		'Ext.button.Button'
	],

	viewModel: {
		type: 'habitatdata'
	},
	bodyStyle: 'background:none',
	title: 'Habitat Data',
	defaultListenerScope: true,

	layout: {
		type: 'vbox',
		align: 'stretch'
	},
	dockedItems: [
		{
			xtype: 'toolbar',
			flex: 1,
			dock: 'top',
			defaultButtonUI: 'default',
			items: [
				{
					xtype: 'button',
					margin: '0 0 0 5',
					text: 'Refresh',
					listeners: {
						click: 'onButtonClick'
					}
				}
			]
		}
	],
	items: [
		{
			xtype: 'container',
			flex: 1,
			itemId: 'chart'
		}
	],
	listeners: {
		activate: 'onPanelActivate'
	},

	onButtonClick: function(button, e, eOpts) {
		this.refreshHabitatData();
	},

	onPanelActivate: function(component, eOpts) {
		if(this.habitatId) {
			this.refreshHabitatData();
		}
	},

	readHabitatData: function(habitatId) {
		let html = `
		<div id="tempChart" style="height: 50%; width: 100%;"></div>
		<div id="humidityChart" style="height: 50%; width: 100%;"></div>
		`;
		this.habitatId = habitatId;
		this.queryById('chart').setHtml(html);
		this.refreshHabitatData();
	},

	refreshHabitatData: function() {
		AERP.Ajax.request({
			url:'/Habitat/readHabitatVitals',
			jsonData:{habitatId:this.habitatId},
			success:function(reply) {
				if(reply.data.temps.length === 0) {
					return;
				}
				this.chart1 = new CanvasJS.Chart("tempChart",
												 {

					title:{
						text: "Habitat Temp (Current: " + reply.data.temps[reply.data.temps.length - 1].y + ")"
					},
					data: [
						{
							type: "line",

							dataPoints: reply.data.temps
						}
					]
				});


				this.chart2 = new CanvasJS.Chart("humidityChart",
												 {

					title:{
						text: "Habitat Humidity (Current: " + reply.data.humidities[reply.data.humidities.length - 1].y + ")"
					},
					data: [
						{
							type: "line",

							dataPoints: reply.data.humidities
						}
					]
				});



				this.chart1.render();
				this.chart2.render();
			},
			scope:this,
			mask:this
		});
	}

});