/*
 * File: app/view/PasswordReset.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.3.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.3.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('PasswordReset.view.PasswordReset', {
	extend: 'Ext.panel.Panel',
	alias: 'widget.passwordreset',

	requires: [
		'PasswordReset.view.PasswordResetViewModel',
		'Ext.container.Container',
		'Ext.form.field.Text',
		'Ext.button.Button'
	],

	viewModel: {
		type: 'passwordreset'
	},
	border: false,
	frame: true,
	margin: 5,
	width: 250,
	bodyPadding: 10,
	bodyStyle: 'background:none',
	defaultListenerScope: true,

	layout: {
		type: 'vbox',
		align: 'stretch'
	},
	listeners: {
		afterrender: 'onPanelAfterRender'
	},
	items: [
		{
			xtype: 'container',
			flex: 1,
			cls: 'logo',
			height: 75,
			itemId: 'logo',
			style: ' width: 175px; height: 75px; background: url(/Login/resources/logo.png) no-repeat; background-position: center center; background-size: contain; margin: 0 auto 5px auto; display: block;'
		},
		{
			xtype: 'container',
			flex: 1,
			itemId: 'name'
		},
		{
			xtype: 'textfield',
			itemId: 'newPassword',
			margin: '15 0 0 0',
			emptyText: 'New Password'
		},
		{
			xtype: 'button',
			height: 39,
			margin: '10 0 0 15',
			width: 140,
			text: 'Reset Password',
			listeners: {
				click: 'onButtonClick'
			}
		}
	],

	onPanelAfterRender: function(component, eOpts) {
		let searchQuery = Ext.Object.fromQueryString(window.location.search);

		if(!searchQuery.hasOwnProperty('nonce')) {
			Ext.Msg.alert("Warning", "Cannot lookup Employee. Did you come here from Password Reset Email?");
			return;
		}

		AERP.Ajax.request({
			url:"/PasswordReset/verifyNonce",
			jsonData:{nonce:searchQuery.nonce},
			success:function(reply) {
				this.queryById('name').setHtml(reply.data);
			},
			scope:this,
			mask:this
		});
	},

	onButtonClick: function(button, e, eOpts) {
		let searchQuery = Ext.Object.fromQueryString(window.location.search);

		if(!searchQuery.hasOwnProperty('nonce')) {
			Ext.Msg.alert("Warning", "Cannot lookup Employee. Did you come here from Password Reset Email?");
			return;
		}


		let newPassword = this.queryById('newPassword').getValue();

		if(newPassword === "") {
			Ext.Msg.alert("Warning", "Must enter new Password!");
			return;
		}

		AERP.Ajax.request({
			url:"/PasswordReset/resetPassword",
			jsonData:{nonce:searchQuery.nonce, newPassword:newPassword},
			success:function(reply) {
				window.location.href = '/Login';
			},
			scope:this,
			mask:this
		});
	}

});